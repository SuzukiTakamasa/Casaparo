name: Deploy to Cloudflare Workers and Pages

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  deploy-to-worker-rs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install Wrangler CLI
      run: npm uninstall -g @cloudflare/wrangler && npm install -g wrangler
      working-directory: ${{ github.workspace }}/api-server-wasm

    - name: Clean up old caches
      run: cargo clean
      working-directory: ${{ github.workspace }}/api-server-wasm
      
    - name: Install wasm-bindgen-cli
      run: cargo install -f wasm-bindgen-cli --version 0.2.103
      working-directory: ${{ github.workspace }}/api-server-wasm

    - name: Publish to Cloudflare Workers (Development)
      if: github.ref == 'refs/heads/dev'
      run: npm run deploy-dev
      working-directory: ${{ github.workspace }}/api-server-wasm
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

    - name: Publish to Cloudflare Workers (Production)
      if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
      run: npm run deploy-prod
      working-directory: ${{ github.workspace }}/api-server-wasm
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  deploy-to-line-bot-server:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install Wrangler CLI
      run: npm uninstall -g @cloudflare/wrangler && npm install -g wrangler
      working-directory: ${{ github.workspace }}/line-bot-server
    
    - name: Install Dependencies
      run: npm install
      working-directory: ${{ github.workspace }}/line-bot-server
    
    - name: Publish to Cloudflare Workers (Development)
      if: github.ref == 'refs/heads/dev'
      run: npm run deploy-dev
      working-directory: ${{ github.workspace }}/line-bot-server
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

    - name: Publish to Cloudflare Workers (Production)
      if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
      run: npm run deploy-prod
      working-directory: ${{ github.workspace }}/line-bot-server
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  deploy-to-r2:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install Wrangler CLI
      run: npm uninstall -g @cloudflare/wrangler && npm install -g wrangler
      working-directory: ${{ github.workspace }}/r2
    
    - name: Install Dependencies
      run: npm install
      working-directory: ${{ github.workspace }}/r2
    
    - name: Publish to Cloudflare Workers (Development)
      if: github.ref == 'refs/heads/dev'
      run: npm run deploy-dev
      working-directory: ${{ github.workspace }}/r2
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

    - name: Publish to Cloudflare Workers (Production)
      if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
      run: npm run deploy-prod
      working-directory: ${{ github.workspace }}/r2
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
